openapi: 3.0.3
info:
  title: USERS
  version: 1.0.0
  
servers:
  - url: http://127.0.0.1:5000
  
paths:
  /users:
    post:
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario con id, name, email, last_name y password.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Entrada inválida
    get:
      summary: Obtener todos los usuarios
      description: Recupera una lista de todos los usuarios.
      operationId: getUsers
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                  
  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      description: Recupera un usuario específico por su ID.
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          
    put:
      summary: Actualizar un usuario por ID
      description: Actualiza un usuario existente por su ID.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Entrada inválida
        '404':
          description: Usuario no encontrado
          
    delete:
      summary: Eliminar un usuario por ID
      description: Elimina un usuario por su ID.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Usuario eliminado exitosamente
        '404':
          description: Usuario no encontrado
          
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
        - last_name
        - password  # Se agrega el campo password como obligatorio
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Juan Pérez
        email:
          type: string
          example: juan.perez@example.com
        last_name:
          type: string
          example: Pérez
        password:
          type: string
          example: P@ssw0rd123  # Agregamos un ejemplo de contraseña
